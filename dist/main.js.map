{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-shift/add-shift.component.html","webpack:///./src/app/add-shift/add-shift.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/eddit-shifts/eddit-shift-dialog.html","webpack:///./src/app/eddit-shifts/eddit-shifts.component.html","webpack:///./src/app/eddit-shifts/eddit-shifts.component.ts","webpack:///./src/app/generate-report/generate-report.component.css","webpack:///./src/app/generate-report/generate-report.component.html","webpack:///./src/app/generate-report/generate-report.component.ts","webpack:///./src/app/mail.service.ts","webpack:///./src/app/main-window/main-window.component.html","webpack:///./src/app/main-window/main-window.component.ts","webpack:///./src/app/shifts.service.ts","webpack:///./src/app/state.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-card style=\\\"padding: 10px\\\">\\n    <mat-card-title style=\\\"text-align: center;\\\">Punch Now</mat-card-title>\\n    <button mat-raised-button style=\\\"width: 50%; background-color: firebrick; left: 25%\\\" (click)=\\\"autoPunch()\\\">Punch</button>\\n    <p></p>\\n    <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"progressBar\\\"></mat-progress-bar>\\n</mat-card>\\n<p></p>\\n<mat-card style=\\\"padding: 10px\\\">\\n    <mat-card-title style=\\\"text-align: center\\\">Generate Shift</mat-card-title>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input #g_date matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"\\n            [formControl]=\\\"dateFormControl\\\" [errorStateMatcher]=\\\"matcherDate\\\" />\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n        <mat-error *ngIf=\\\"dateFormControl.hasError('required')\\\">Date is <strong>required</strong></mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input #g_start matInput placeholder=\\\"Choose the start time\\\" [formControl]=\\\"startTimeFormControl\\\"\\n            [errorStateMatcher]=\\\"matcherSTime\\\" />\\n        <mat-error *ngIf=\\\"startTimeFormControl.hasError('required')\\\">Start time is <strong>required</strong></mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input #g_end matInput placeholder=\\\"Choose the end time\\\" [formControl]=\\\"endTimeFormControl\\\" [errorStateMatcher]=\\\"matcherETime\\\" />\\n        <mat-error *ngIf=\\\"endTimeFormControl.hasError('required')\\\">End time is <strong>required</strong></mat-error>\\n    </mat-form-field>\\n    <p></p>\\n    <button mat-raised-button style=\\\"width: 20%; background-color: firebrick;\\\" (click)=generatePunch(g_date.value,g_start.value,g_end.value)>Punch</button>\\n    <mat-error>{{generateShiftRes}}</mat-error>\\n</mat-card>\\n\\n<p></p>\\n<mat-card style=\\\"padding: 10px\\\">\\n    <mat-card-title style=\\\"text-align: center\\\">Shift Status</mat-card-title>\\n    <p></p>\\n    <mat-card-title style=\\\"text-align: center; color: orange; font-size: 50px;\\\">{{shiftStatus}}</mat-card-title>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { ShiftsService } from '../shifts.service';\nimport { StateService } from '../state.service';\nimport { MatSnackBar } from '@angular/material';\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.dirty || control.touched));\n  }\n}\n\nexport interface NewShift {\n  date: string;\n  startTime: string;\n  endTime: string;\n}\n\n@Component({\n  selector: 'app-add-shift',\n  templateUrl: './add-shift.component.html',\n  styles: []\n})\nexport class AddShiftComponent implements OnInit {\n\n  public generateShiftRes: string;\n  public shiftStatus: string;\n  public onShift: boolean;\n  private newShift: NewShift;\n\n  constructor(private addShiftService: ShiftsService, private stateService: StateService, private snackBar: MatSnackBar) { }\n\n  dateFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  startTimeFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  endTimeFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  matcherDate = new MyErrorStateMatcher();\n  matcherSTime = new MyErrorStateMatcher();\n  matcherETime = new MyErrorStateMatcher();\n\n  autoPunch() {\n    let now = new Date();\n    this.onShift = this.stateService.getState();\n    if (this.onShift === false) {\n      this.newShift = this.createShift(now);\n      let res = this.addShiftService.setShift(this.newShift);\n      if (res === false) {\n        this.popUp(\"Punch failed, try again\", \"\", 1000);\n        return;\n      }\n      this.popUp(\"Punch success\", \"\", 1000);\n      this.stateService.setState(!this.onShift);\n      this.onShift = !this.onShift;\n      this.updtateStateStatus();\n    } else {\n      this.newShift = this.updateShift(now);\n      let res = this.addShiftService.setShift(this.newShift);\n      if (res === false) {\n        this.popUp(\"Punch failed, try again\", \"\", 1000);\n        return;\n      }\n      this.popUp(\"Punch success\", \"\", 1000);\n      this.stateService.setState(!this.onShift);\n      this.onShift = !this.onShift;\n      this.updtateStateStatus();\n    }\n  }\n\n  generatePunch(date: string, start: string, end: string) {\n    if (date === '' || start === '' || end === '') {\n      this.generateShiftRes = 'Invalid input, Please try again';\n      return;\n    }\n    this.onShift = this.stateService.getState();\n    let newShift = { date: date, startTime: start, endTime: end };\n    if (this.onShift === false) {\n      let res = this.addShiftService.setShift(newShift);\n      if (res === false) {\n        this.popUp(\"Punch failed, try again\", \"\", 1000);\n        return;\n      }\n      this.generateShiftRes = '';\n      this.popUp(\"Punch success\", \"\", 1000);\n      this.onShift = !this.onShift;\n      this.updtateStateStatus();\n    } else {\n      this.popUp(\"You are ON shift, Please click punch to end the previous shift... \", \"\", 3000);\n      return;\n    }\n  }\n\n  updtateStateStatus() {\n    if (this.onShift === true) {\n      this.shiftStatus = 'On shift';\n    } else {\n      this.shiftStatus = 'Off shift';\n    }\n  }\n\n  createShift(shift: Date): { date: string; startTime: string; endTime: string } {\n    let date = shift.getDate() + \"/\" + shift.getMonth() + \"/\" + shift.getFullYear();\n    var time = shift.getHours() + \":\" + (shift.getMinutes() < 10 ? '0' : '') + shift.getMinutes();\n    let newShift = { date: date, startTime: time, endTime: '0' };\n    return newShift;\n  }\n\n  updateShift(now: Date): { date: string; startTime: string; endTime: string } {\n    let editedShift = this.addShiftService.getShift();\n    editedShift.endTime = now.getHours() + \":\" + (now.getMinutes() < 10 ? '0' : '') + now.getMinutes();\n    return editedShift;\n  }\n\n  popUp(message: string, action: string, duration: number) {\n    this.snackBar.open(message, action, {\n      duration: duration,\n      verticalPosition: 'bottom',\n    });\n  }\n\n\n  ngOnInit() {\n    this.onShift = this.stateService.getState();\n    this.updtateStateStatus();\n  }\n\n}\n","module.exports = \".example-container {\\n    width: 100%;\\n    height: 100%;\\n    border: 1px solid rgba(0, 0, 0, 0.5);\\n}\\n\\n/* .example-sidenav-content{\\n    position: relative;\\n    bottom: 50%;\\n} */\\n\\n.example-sidenav {\\n    padding: 30px;\\n    width: 25%;\\n}\\n\\n.main-toolbar{\\n    height: 10%;\\n}\\n\\n.example-container-main-window{\\n    padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLG9DQUFvQztBQUN4Qzs7QUFFQTs7O0dBR0c7O0FBRUg7SUFDSSxhQUFhO0lBQ2IsVUFBVTtBQUNkOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuXG4vKiAuZXhhbXBsZS1zaWRlbmF2LWNvbnRlbnR7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvdHRvbTogNTAlO1xufSAqL1xuXG4uZXhhbXBsZS1zaWRlbmF2IHtcbiAgICBwYWRkaW5nOiAzMHB4O1xuICAgIHdpZHRoOiAyNSU7XG59XG5cbi5tYWluLXRvb2xiYXJ7XG4gICAgaGVpZ2h0OiAxMCU7XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lci1tYWluLXdpbmRvd3tcbiAgICBwYWRkaW5nOiAyMHB4O1xufSJdfQ== */\"","module.exports = \"<mat-toolbar class=\\\"main-toolbar\\\" style=\\\"padding: 5px\\\">\\n    <mat-toolbar-row>\\n        <div class=\\\"example-sidenav-content\\\">\\n            <button type=\\\"button\\\" class=\\\"main-menu-button\\\" mat-raised-button (click)=\\\"drawer.toggle()\\\" style=\\\"background-color:brown\\\">\\n                Toggle Main Menu\\n            </button>\\n            <span style=\\\"left:45%; position: absolute\\\">My Shifts</span>\\n        </div>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n<mat-drawer-container class=\\\"example-container\\\" autosize>\\n    <mat-drawer #drawer class=\\\"example-sidenav\\\" mode=\\\"side\\\">\\n        <button (click)=\\\"toggleComponent(0)\\\" mat-raised-button style=\\\"width: 100%; background-color: peru\\\">\\n            Home\\n        </button>\\n        <p></p>\\n        <button (click)=\\\"toggleComponent(1)\\\" mat-raised-button style=\\\"width: 100%; background-color: peru\\\">\\n            Add Shift\\n        </button>\\n        <p></p>\\n        <button (click)=\\\"toggleComponent(2)\\\" mat-raised-button style=\\\"width: 100%; background-color: peru\\\">\\n            Edit Shifts\\n        </button>\\n        <p></p>\\n        <button (click)=\\\"toggleComponent(3)\\\" mat-raised-button style=\\\"width: 100%; background-color: peru\\\">\\n            Generate Report\\n        </button>\\n        <p></p>\\n        <button (click)=\\\"toggleComponent(4)\\\" mat-raised-button style=\\\"width: 100%; background-color: peru\\\">\\n            Statitstics\\n        </button>\\n    </mat-drawer>\\n    <mat-drawer-container class=\\\"example-container-main-window\\\" autosize>\\n        <app-main-window *ngIf=\\\"isMainWindow\\\"></app-main-window>\\n        <app-add-shift *ngIf=\\\"isAdd\\\"></app-add-shift>\\n        <app-eddit-shifts *ngIf=\\\"isEddit\\\"></app-eddit-shifts>\\n        <app-generate-report *ngIf=\\\"isGenerate\\\"></app-generate-report>\\n    </mat-drawer-container>\\n</mat-drawer-container>\\n\\n<!-- <router-outlet></router-outlet> -->\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-shifts';\n  public isAdd: boolean = false;\n  public isMainWindow: boolean = true;\n  public isEddit: boolean = false;\n  public isGenerate: boolean = false;\n\n  toggleComponent(e)\n  {\n    if(e === 0) // Home button clicked\n    {\n      this.isMainWindow = true;\n      this.isAdd = false;\n      this.isEddit = false;\n      this.isGenerate = false;\n    }\n    else if(e === 1) // Add shift button clicked\n    {\n      this.isAdd = true;\n      this.isMainWindow = false;\n      this.isEddit = false;\n      this.isGenerate = false;\n    }\n    else if(e === 2) // Edit shift button clicked\n    {\n      this.isAdd = false;\n      this.isMainWindow = false;\n      this.isEddit = true;\n      this.isGenerate = false;\n    }\n    else if (e === 3) // Edit shift button clicked\n    {\n      this.isAdd = false;\n      this.isMainWindow = false;\n      this.isEddit = false;\n      this.isGenerate = true;\n    }\n  }\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// import { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainWindowComponent } from './main-window/main-window.component';\nimport { AddShiftComponent } from './add-shift/add-shift.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ShiftsService } from './shifts.service';\nimport { StateService } from './state.service';\n\n\n\n\n// Angular Material Components\nimport { MatCheckboxModule } from '@angular/material';\nimport { MatButtonModule, MatNativeDateModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EdditShiftsComponent, EditOneShiftComponent } from './eddit-shifts/eddit-shifts.component';\nimport { GenerateReportComponent } from './generate-report/generate-report.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainWindowComponent,\n    AddShiftComponent,\n    EdditShiftsComponent,\n    EditOneShiftComponent,\n    GenerateReportComponent,\n  ],\n  entryComponents: [\n    EditOneShiftComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [MatDatepickerModule, ShiftsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<ng-container>\\n    <h4>Edit Shift</h4>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input #Day matInput placeholder=\\\"Day\\\" value=\\\"{{ data.day }}\\\" [(ngModel)]=\\\"data.day\\\" style=\\\"width: 50%;\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input #Start matInput placeholder=\\\"Start Time\\\" value=\\\"{{ data.start }}\\\" [(ngModel)]=\\\"data.start\\\" style=\\\"width: 50%;\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input #End matInput placeholder=\\\"End Time\\\" value=\\\"{{ data.end }}\\\" [(ngModel)]=\\\"data.end\\\" style=\\\"width: 50%;\\\">\\n    </mat-form-field>\\n    <p></p>\\n    <button mat-raised-button style=\\\"color: darkgoldenrod\\\" (click)=\\\"done(data.position ,Day.value, Start.value, End.value)\\\">Done</button>\\n</ng-container>\"","module.exports = \"<button mat-raised-button style=\\\"width: 30%; background-color: firebrick;\\\" (click)=\\\"removeAll()\\\">REMOVE ALL</button>\\n<p></p>\\n<table style=\\\"width: 100%\\\" mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"position\\\">\\n        <th mat-header-cell *matHeaderCellDef> Shift No. </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position}} </td>\\n    </ng-container>\\n\\n    <!-- Day Column -->\\n    <ng-container matColumnDef=\\\"day\\\">\\n        <th mat-header-cell *matHeaderCellDef> Day </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.day}}</td>\\n    </ng-container>\\n\\n    <!-- Start Time Column -->\\n    <ng-container matColumnDef=\\\"startTime\\\">\\n        <th mat-header-cell *matHeaderCellDef> Start time </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.startTime}}</td>\\n    </ng-container>\\n\\n    <!-- End Time Column -->\\n    <ng-container matColumnDef=\\\"endTime\\\">\\n        <th mat-header-cell *matHeaderCellDef> End time </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.endTime}}</td>\\n    </ng-container>\\n\\n    <!-- Action Column -->\\n    <ng-container matColumnDef=\\\"action\\\">\\n        <th mat-header-cell *matHeaderCellDef style=\\\"text-align: center\\\"> Action </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"padding: 10px\\\">\\n            <button mat-raised-button style=\\\"left: 17%; color: darkgoldenrod\\\" (click)=\\\"editOne(element.position, element.day, element.startTime, element.endTime)\\\">EDIT</button>\\n            <button mat-raised-button style=\\\"left: 20%; color: darkgoldenrod\\\" (click)=\\\"removeOne(element.position, element.day, element.startTime, element.endTime)\\\">REMOVE</button>\\n        </td>\\n    </ng-container>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { ShiftsService } from '../shifts.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nexport interface PeriodicElement {\n\tday: string;\n\tstartTime: string;\n\tendTime: string;\n\tposition: number;\n\taction: string;\n}\n\n@Component({\n\tselector: 'app-eddit-shifts',\n\ttemplateUrl: `./eddit-shifts.component.html`,\n\tstyles: []\n})\nexport class EdditShiftsComponent implements OnInit {\n\tprivate shifts: [];\n\tdisplayedColumns: string[] = ['position', 'day', 'startTime', 'endTime', 'action'];\n\tdataSource: PeriodicElement[];\n\n\tconstructor(private shiftService: ShiftsService, public dialog: MatDialog) { }\n\n\tngOnInit() {\n\t\tthis.bulidTable();\n\t}\n\n\tprivate bulidTable() {\n\t\tlet temp: PeriodicElement;\n\t\tthis.shifts = this.shiftService.getShifts();\n\t\tthis.dataSource = new Array();\n\t\tif (this.shifts.length > 0) {\n\t\t\tthis.shifts.forEach((element: any, index) => {\n\t\t\t\ttemp = { position: ++index, day: element.date, startTime: element.startTime, endTime: element.endTime, action: '0' };\n\t\t\t\tthis.dataSource.push(temp);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic removeAll() {\n\t\tlet res = this.shiftService.removeAll();\n\t\tif (res === true) {\n\t\t\tthis.bulidTable();\n\t\t}\n\t}\n\n\tpublic removeOne(position: number) {\n\t\tlet res = this.shiftService.removeOne(position);\n\t\tif (res === true) {\n\t\t\tthis.bulidTable();\n\t\t}\n\t}\n\n\tpublic editOne(position: number, day: string, start: string, end: string) {\n\t\tconst dialogRef = this.dialog.open(EditOneShiftComponent, {\n\t\t\theight: '250px',\n\t\t\twidth: '600px',\n\t\t\tdata:{\n\t\t\t\tposition: position,\n\t\t\t\tday: day,\n\t\t\t\tstart: start,\n\t\t\t\tend: end\n\t\t\t}\n\t\t});\n\n\t\tdialogRef.afterClosed().subscribe(result => {\n\t\t\tlet res = this.shiftService.editOne(result.position, result.day, result.start, result.end);\n\t\t\tif(res === true){\n\t\t\t\tthis.bulidTable();\n\t\t\t}\n\t\t});\n\t}\n}\n\n@Component({\n\tselector: 'eddit-shift-dialog',\n\ttemplateUrl: 'eddit-shift-dialog.html',\n})\nexport class EditOneShiftComponent {\n\tconstructor(public dialogRef: MatDialogRef<EditOneShiftComponent>, private shiftService: ShiftsService,\n\t\t@Inject(MAT_DIALOG_DATA) public data: any){ }\n\t\t\n\tpublic done(position: number, day: string, start: string, end: string) {\n\t\tlet updated_shift = { position: position, day: day, start: start, end: end };\n\t\tthis.dialogRef.close(updated_shift);\n\t}\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlbmVyYXRlLXJlcG9ydC9nZW5lcmF0ZS1yZXBvcnQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-card style=\\\"padding: 10px\\\">\\n  <h4 style=\\\"text-align: center;\\\">Generate Report</h4>\\n  <button mat-raised-button style=\\\"color: darkgoldenrod\\\" (click)=\\\"generatePDF()\\\">Generate Report</button>\\n</mat-card>\\n<p>\\n\\n<mat-card style=\\\"padding: 10px\\\">\\n  <h4 style=\\\"text-align: center;\\\">Send Report</h4>\\n  <mat-form-field class=\\\"example-full-width\\\" style=\\\"text-align: center; width: 100%\\\">\\n    <input #from matInput  placeholder=\\\"From\\\" value=\\\"{{settings[0].from}}\\\" [formControl]=\\\"fromControl\\\"/>\\n  </mat-form-field>\\n  <p>\\n  <mat-form-field class=\\\"example-full-width\\\" style=\\\"text-align: center; width: 100%\\\">\\n    <input #pass matInput  placeholder=\\\"Password\\\" value=\\\"{{settings[0].pass}}\\\" [formControl]=\\\"passControl\\\"/>\\n  </mat-form-field>\\n  <p>\\n  <mat-form-field class=\\\"example-full-width\\\" style=\\\"text-align: center; width: 100%\\\">\\n    <input #repass matInput  placeholder=\\\"Re-type Password\\\" value=\\\"{{settings[0].pass}}\\\" [formControl]=\\\"repassControl\\\"/>\\n  </mat-form-field>\\n  <p>\\n  <mat-form-field class=\\\"example-full-width\\\" style=\\\"text-align: center; width: 100%\\\">\\n    <input #to matInput  placeholder=\\\"To\\\" value=\\\"{{settings[0].to}}\\\" [formControl]=\\\"toControl\\\"/>\\n  </mat-form-field>\\n\\n  <button mat-raised-button style=\\\"color: darkgoldenrod\\\" (click)=\\\"sendMail(from.value, to.value, pass.value, repass.value)\\\">Upload and Send</button>\\n  <button mat-raised-button style=\\\"color: darkgoldenrod\\\" (click)=\\\"saveSettings(from.value, to.value, pass.value)\\\">Save Settings</button>\\n  <button mat-raised-button style=\\\"color: darkgoldenrod\\\" (click)=\\\"clearSettings()\\\">Clear Settings</button>\\n\\n</mat-card>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport * as jsPDF from 'jspdf';\nimport { ShiftsService } from '../shifts.service';\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { MailService } from '../mail.service';\n\n\n@Component({\n  selector: 'app-generate-report',\n  templateUrl: './generate-report.component.html',\n  styleUrls: ['./generate-report.component.css']\n})\nexport class GenerateReportComponent implements OnInit {\n\n  fromControl = new FormControl('', [\n    Validators.required,\n  ]);\n  toControl = new FormControl('', [\n    Validators.required,\n  ]);\n  passControl = new FormControl('', [\n    Validators.required,\n  ]);\n  repassControl = new FormControl('', [\n    Validators.required,\n  ]);\n\n  private shifts: [];\n  public settings: object[];\n  constructor(private shiftService: ShiftsService, private mail: MailService) { }\n\n  ngOnInit() {\n    this.loadSettings();\n  }\n\n  private getData() {\n    return this.shiftService.getShifts();\n  }\n\n  private generatePDF(){\n    var doc = new jsPDF();\n    this.shifts = this.getData();\n    let report = [];\n    doc.setFontSize(22);\n    doc.text(80, 20, 'Shifts Report');\n    doc.line(80, 22, 125, 22);\n    this.shifts.forEach((element: any, index) => {\n      let temp = ++index + \"               \" + element.date + \"               \" + element.startTime + \"                   \" +  element.endTime;\n      report.push(temp);\n    });\n    doc.setFontSize(8).setTextColor(0).setFontType('bold');\n    doc.text(55, 30, \"Shift No\" + \"               \" + \"Shift date\" + \"                      \" + \"Shift start\" + \"                     \" + \"Shift end\");\n    doc.setFontSize(12).setTextColor(0).setFontType('');\n    doc.text(58, 35, report);\n    let now = new Date();\n    let date = now.getDate() + \"/\" + now.getMonth() + \"/\" + now.getFullYear();\n    doc.setFontSize(8).setTextColor(100);\n    doc.text(80, 280, 'Report generate date : ' + date);\n    doc.save('myShifts.pdf');\n  }\n\n  sendMail(from: string, to: string, pass: string, repass: string){\n    if(pass !== repass)\n    {\n      alert(\"Password dont match\");\n      return;\n    }\n    let res = this.mail.sendMail({from: from, to: to, pass: pass});\n    if(res === true)\n      alert(\"Your email sent succesfully\\n\" + \"From: \" + from + \"\\nTo: \" + to);\n    else\n      alert(\"Failed to send email to: \" + to);\n  }\n\n  clearSettings(){\n    let res = this.mail.clearSettings();\n    if(res === true)\n      this.loadSettings();\n  }\n\n  upload(){\n\n  }\n\n  saveSettings(from: string, to: string, pass: string){\n    let res = this.mail.saveMailSettings({from: from, to: to, pass: pass});\n    if(res === true)\n      alert(\"Your settings successfully saved\");\n    else\n      alert(\"Failed to save your settings\");\n  }\n\n  private loadSettings(){\n    this.settings = this.mail.getSettings();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { IpcRenderer } from 'electron';\n\ndeclare global {\n  interface Window { require: any; }\n}\nwindow.require = window.require || {};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailService {\n  private ipc: IpcRenderer | undefined = void 0;\n\n  constructor() {\n    if (window.require) {\n      try {\n        this.ipc = window.require('electron').ipcRenderer;\n      } catch (e) {\n        throw e;\n      }\n    } else {\n      console.warn('Electron\\'s IPC was not loaded');\n    }\n  }\n\n  public sendMail(data: Object){\n    return this.ipc.sendSync('sendMail', data);\n  }\n\n  public saveMailSettings(data: Object){\n    return this.ipc.sendSync('saveMailSettings', data);\n  }\n\n  public getSettings(){\n    return this.ipc.sendSync('getSettings');\n  }\n\n  public clearSettings(){\n    return this.ipc.sendSync('clearSettings');\n  }\n}\n","module.exports = \"<p style=\\\"font-size: 90%;\\\">Welcome to My Shift {{title}}, The best place to manage your shifts.<p style=\\\"font-size: 90%;\\\">\\n    Toggle main menu to Add a new shift or Edit an exciting one.<p style=\\\"font-size: 90%;\\\">\\n    At the end for the month you can press generate report to create a monthly report of your shifts.\\n</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-window',\n  templateUrl: './main-window.component.html',\n  styles: []\n})\nexport class MainWindowComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { IpcRenderer } from 'electron';\n\ndeclare global {\n  interface Window { require: any; }\n}\nwindow.require = window.require || {};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShiftsService {\n  private ipc: IpcRenderer | undefined = void 0;\n\n  constructor() {\n    if (window.require) {\n      try {\n        this.ipc = window.require('electron').ipcRenderer;\n      } catch (e) {\n        throw e;\n      }\n    } else {\n      console.warn('Electron\\'s IPC was not loaded');\n    }\n  }\n\n  public getShift(){ //Return the last shift in th json file\n    return this.ipc.sendSync('getShift');\n  }\n\n  public getShifts(){\n    return this.ipc.sendSync('getShifts');\n  }\n\n  public setShift(shift): any { // sending the data back to electron\n    return this.ipc.sendSync('setShift', shift);\n  }\n\n  public removeAll(){\n    return this.ipc.sendSync('removeAll');\n  }\n\n  public removeOne(position: number){\n    return this.ipc.sendSync('removeOne', position);\n  }\n\n  public editOne(position:number, date: string, start: string, end: string){\n    return this.ipc.sendSync('editOne', position, { date: date, startTime: start, endTime: end });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { IpcRenderer } from 'electron';\n\ndeclare global {\n  interface Window { require: any; }\n}\nwindow.require = window.require || {};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class StateService {\n  private ipc: IpcRenderer | undefined = void 0;\n  private state: boolean;\n\n  constructor() {\n    if (window.require) {\n      try {\n        this.ipc = window.require('electron').ipcRenderer;\n      } catch (e) {\n        throw e;\n      }\n    } else {\n      console.warn('Electron\\'s IPC was not loaded');\n    }\n  }\n\n  public getState(): boolean {\n    this.state = this.ipc.sendSync('getState');\n    return this.state;\n  }\n\n  public setState(state) {\n    this.state = this.ipc.sendSync('setState', state);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}