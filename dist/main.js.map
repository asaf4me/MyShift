{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-shift/add-shift.component.html","webpack:///./src/app/add-shift/add-shift.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/eddit-shifts/eddit-shifts.component.ts","webpack:///./src/app/main-window/main-window.component.html","webpack:///./src/app/main-window/main-window.component.ts","webpack:///./src/app/shifts.service.ts","webpack:///./src/app/state.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-card style=\\\"padding: 10px\\\">\\n    <mat-card-title style=\\\"text-align: center;\\\">Punch Now</mat-card-title>\\n    <button mat-raised-button style=\\\"width: 50%; background-color: firebrick; left: 25%\\\" (click)=\\\"autoPunch()\\\">PUNCH</button>\\n    <p></p>\\n    <mat-error *ngIf=\\\"punchShiftTrue\\\" style=\\\"color:green;\\\">{{punchShiftRes}}</mat-error>\\n    <mat-error *ngIf=\\\"punchShiftFalse\\\">{{punchShiftRes}}</mat-error>\\n</mat-card>\\n<p></p>\\n<mat-card style=\\\"padding: 10px\\\">\\n    <mat-card-title style=\\\"text-align: center\\\">Generate Shift</mat-card-title>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input #g_date matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\"\\n            [formControl]=\\\"dateFormControl\\\" [errorStateMatcher]=\\\"matcherDate\\\" />\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n        <mat-error *ngIf=\\\"dateFormControl.hasError('required')\\\">Date is <strong>required</strong></mat-error>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input #g_start matInput placeholder=\\\"Choose the start time\\\" [formControl]=\\\"startTimeFormControl\\\"\\n            [errorStateMatcher]=\\\"matcherSTime\\\" />\\n        <mat-error *ngIf=\\\"startTimeFormControl.hasError('required')\\\">Start time is <strong>required</strong></mat-error>\\n    </mat-form-field>:\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input #g_end matInput placeholder=\\\"Choose the end time\\\" [formControl]=\\\"endTimeFormControl\\\" [errorStateMatcher]=\\\"matcherETime\\\" />\\n        <mat-error *ngIf=\\\"endTimeFormControl.hasError('required')\\\">End time is <strong>required</strong></mat-error>\\n    </mat-form-field>\\n    <p></p>\\n    <button mat-raised-button style=\\\"width: 20%; background-color: firebrick;\\\" (click)=generatePunch(g_date.value,g_start.value,g_end.value)>PUNCH</button>\\n    <mat-error>{{generateShiftRes}}</mat-error>\\n</mat-card>\\n\\n<p></p>\\n<mat-card style=\\\"padding: 10px\\\">\\n    <mat-card-title style=\\\"text-align: center\\\">Your Shift Status</mat-card-title><p></p>\\n    <mat-card-title style=\\\"text-align: center\\\">{{shiftStatus}}</mat-card-title>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\ndeclare function require(name: string);\nconst dateFormat = require('dateformat');\nimport { FormControl, FormGroupDirective, NgForm, Validators } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { ShiftsService } from '../shifts.service';\nimport { StateService } from '../state.service';\n\n\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    return !!(control && control.invalid && (control.dirty || control.touched));\n  }\n}\n\n@Component({\n  selector: 'app-add-shift',\n  templateUrl: './add-shift.component.html',\n  styles: []\n})\nexport class AddShiftComponent implements OnInit {\n\n  public generateShiftRes: string;\n  public punchShiftRes: string;\n  public punchShiftTrue: boolean;\n  public punchShiftFalse: boolean;\n  public onShiftStatus: boolean;\n  public shiftStatus: string;\n  public stateStatus: boolean;\n\n  constructor(private addShiftService: ShiftsService, private stateService: StateService) { }\n\n  dateFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  startTimeFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  endTimeFormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  matcherDate = new MyErrorStateMatcher();\n  matcherSTime = new MyErrorStateMatcher();\n  matcherETime = new MyErrorStateMatcher();\n\n  autoPunch() {\n    const now = new Date();\n    const autoShift = dateFormat(now, 'dddd mmmm yyyy h:MM TT');\n    const res = this.addShiftService.setShift({autoShift}); // fetch the data to electron using ipcRenderer\n    if (res === true) {\n      this.punchShiftRes = 'PUNCH SUCCESS: ' + autoShift;\n      this.punchShiftTrue = true;\n      this.punchShiftFalse = false;\n      this.stateService.setState(!this.stateStatus);\n      return;\n    }\n    this.punchShiftRes = 'Punch FAILED, TRY AGAIN';\n    this.punchShiftFalse = true;\n    this.punchShiftTrue = false;\n  }\n\n  generatePunch(date: string, start: string, end: string) {\n    if (date === '' || start === '' || end === '') {\n      this.generateShiftRes = 'Invalid input, Please try again';\n      return;\n    }\n    this.generateShiftRes = '';\n  }\n\n  updtateStateStatus() {\n    if (this.stateStatus === true) {\n      this.shiftStatus = 'On Shift';\n    } else {\n      this.shiftStatus = 'Off Shift';\n    }\n  }\n\n  ngOnInit() {\n    this.stateStatus = this.stateService.getState();\n    this.updtateStateStatus();\n  }\n\n}\n","module.exports = \".example-container {\\n    width: 100%;\\n    height: 100%;\\n    border: 1px solid rgba(0, 0, 0, 0.5);\\n}\\n\\n/* .example-sidenav-content{\\n    position: relative;\\n    bottom: 50%;\\n} */\\n\\n.example-sidenav {\\n    padding: 30px;\\n    width: 25%;\\n}\\n\\n.main-toolbar{\\n    height: 10%;\\n}\\n\\n.example-container-main-window{\\n    padding: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLG9DQUFvQztBQUN4Qzs7QUFFQTs7O0dBR0c7O0FBRUg7SUFDSSxhQUFhO0lBQ2IsVUFBVTtBQUNkOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjUpO1xufVxuXG4vKiAuZXhhbXBsZS1zaWRlbmF2LWNvbnRlbnR7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvdHRvbTogNTAlO1xufSAqL1xuXG4uZXhhbXBsZS1zaWRlbmF2IHtcbiAgICBwYWRkaW5nOiAzMHB4O1xuICAgIHdpZHRoOiAyNSU7XG59XG5cbi5tYWluLXRvb2xiYXJ7XG4gICAgaGVpZ2h0OiAxMCU7XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lci1tYWluLXdpbmRvd3tcbiAgICBwYWRkaW5nOiAyMHB4O1xufSJdfQ== */\"","module.exports = \"<mat-toolbar class=\\\"main-toolbar\\\" style=\\\"padding: 5px\\\">\\n    <mat-toolbar-row>\\n        <div class=\\\"example-sidenav-content\\\">\\n            <button type=\\\"button\\\" class=\\\"main-menu-button\\\" mat-raised-button (click)=\\\"drawer.toggle()\\\" style=\\\"background-color:brown\\\">\\n                Toggle Main Menu\\n            </button>\\n            <span style=\\\"left:45%; position: absolute\\\">My Shifts</span>\\n        </div>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n<mat-drawer-container class=\\\"example-container\\\" autosize>\\n    <mat-drawer #drawer class=\\\"example-sidenav\\\" mode=\\\"side\\\">\\n        <button (click)=\\\"toggleComponent(0)\\\" mat-raised-button style=\\\"width: 100%; background-color: peru\\\">\\n            Home\\n        </button>\\n        <p></p>\\n        <button (click)=\\\"toggleComponent(1)\\\" mat-raised-button style=\\\"width: 100%; background-color: peru\\\">\\n            Add Shift\\n        </button>\\n        <p></p>\\n        <button (click)=\\\"toggleComponent(2)\\\" mat-raised-button style=\\\"width: 100%; background-color: peru\\\">\\n            Edit Shifts\\n        </button>\\n        <p></p>\\n        <button (click)=\\\"toggleComponent(3)\\\" mat-raised-button style=\\\"width: 100%; background-color: peru\\\">\\n            Generate Report\\n        </button>\\n        <p></p>\\n        <button (click)=\\\"toggleComponent(4)\\\" mat-raised-button style=\\\"width: 100%; background-color: peru\\\">\\n            Statitstics\\n        </button>\\n    </mat-drawer>\\n    <mat-drawer-container class=\\\"example-container-main-window\\\" autosize>\\n        <app-main-window *ngIf=\\\"isMainWindow\\\"></app-main-window>\\n        <app-add-shift *ngIf=\\\"isAdd\\\"></app-add-shift>\\n        <app-eddit-shifts *ngIf=\\\"isEddit\\\"></app-eddit-shifts>\\n    </mat-drawer-container>\\n</mat-drawer-container>\\n\\n<!-- <router-outlet></router-outlet> -->\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-shifts';\n  public isAdd: boolean = false;\n  public isMainWindow: boolean = true;\n  public isEddit: boolean = false;\n\n  toggleComponent(e)\n  {\n    if(e === 0) // Home button clicked\n    {\n      this.isMainWindow = true;\n      this.isAdd = false;\n      this.isEddit = false;\n    }\n    else if(e === 1) // Add shift button clicked\n    {\n      this.isAdd = true;\n      this.isMainWindow = false;\n      this.isEddit = false;\n    }\n    else if(e === 2) // Edit shift button clicked\n    {\n      this.isAdd = false;\n      this.isMainWindow = false;\n      this.isEddit = true;\n    }\n  }\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// import { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainWindowComponent } from './main-window/main-window.component';\nimport { AddShiftComponent } from './add-shift/add-shift.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ShiftsService } from './shifts.service';\nimport { StateService } from './state.service';\n\n\n\n\n// Angular Material Components\nimport { MatCheckboxModule } from '@angular/material';\nimport { MatButtonModule, MatNativeDateModule } from '@angular/material';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EdditShiftsComponent } from './eddit-shifts/eddit-shifts.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainWindowComponent,\n    AddShiftComponent,\n    EdditShiftsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatCheckboxModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatMenuModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatExpansionModule,\n    MatButtonToggleModule,\n    MatChipsModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [MatDatepickerModule, ShiftsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-eddit-shifts',\n  template: `\n    <p>\n      edit-shifts works!\n    </p>\n  `,\n  styles: []\n})\nexport class EdditShiftsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p style=\\\"font-size: 90%;\\\">Welcome to My Shift {{title}}, The best place to manage your shifts.<p style=\\\"font-size: 90%;\\\">\\n    Toggle main menu to Add a new shift or Edit an exciting one.<p style=\\\"font-size: 90%;\\\">\\n    At the end for the month you can press generate report to create a monthly report of your shifts.\\n</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-window',\n  templateUrl: './main-window.component.html',\n  styles: []\n})\nexport class MainWindowComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { IpcRenderer } from 'electron';\n\ndeclare global {\n  interface Window { require: any; }\n}\nwindow.require = window.require || {};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShiftsService {\n  private ipc: IpcRenderer | undefined = void 0;\n\n  constructor() {\n    if (window.require) {\n      try {\n        this.ipc = window.require('electron').ipcRenderer;\n      } catch (e) {\n        throw e;\n      }\n    } else {\n      console.warn('Electron\\'s IPC was not loaded');\n    }\n  }\n\n  public setShift(shift): any { // sending the data back to electron\n    this.ipc.send('setShift', shift);\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IpcRenderer } from 'electron';\n\ndeclare global {\n  interface Window { require: any; }\n}\nwindow.require = window.require || {};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class StateService {\n  private ipc: IpcRenderer | undefined = void 0;\n  private state: boolean;\n\n  constructor() {\n    if (window.require) {\n      try {\n        this.ipc = window.require('electron').ipcRenderer;\n      } catch (e) {\n        throw e;\n      }\n    } else {\n      console.warn('Electron\\'s IPC was not loaded');\n    }\n  }\n\n  public getState(): boolean {\n    this.state = this.ipc.sendSync('getState');\n    return this.state;\n  }\n\n  public setState(state) {\n    console.log(state);\n    this.state = this.ipc.sendSync('setState', state);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}